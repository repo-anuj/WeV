// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String @db.VarChar(100)
  clerkId      String @unique
  email        String @unique
  profileImage String
  webinars     Webinar[] @relation("PresenterWebinars)
  stripeConnectId  String?   @db.VarChar(255)
  lastLoginAt      DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deletedAt        DateTime?
  subscriptions    Boolean   @default(false)
  stripeCustomerId String?   @db.VarChar(255)

  @@index([email])
  @@index([clerkId])
}

model Webinar {
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String @db.VarChar(255)
  description   String? @db.Text
  startTime     DateTime
  endTime       DateTime?
  duration      Int    @default(0) //duration in minutes
  webinarStatus WebinarStatusEnum @default(SCHEDULED)
  presenterId   String @db.Uuid
  presenter     User @relation("PresenterWebinars", fields: [persenterId], references: [id], onDelete: Cascade)
  attendances   Attendance[]
  tags          String[]
  catlabel      String?  @db.VarChar(50)
  catType       CtaTypeEnum
  catUrl        String?  @db.VarChar(255)
  couponCode    String?  @db.VarChar(50)
  couponEnabled Boolean @default(false)
  couponExpiry  DateTime?
  lockChat      Boolean  @default(false)
  stripeProductId String? @db.VarChar(255)
  aiAgentId     String? @db.Uuid
  priceId       String? @db.VarChar(255)
  recordingUrl  String? 
  
  

  
  
}